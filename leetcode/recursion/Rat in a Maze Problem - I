class Solution{
    public:
    void solve(vector<string>&ans,string p,int n,int i,int j,vector<vector<int>> &m)
    {
        if(i==n-1 && j==n-1 && m[i][j]==1)
        {
            ans.push_back(p);
            
            return;
        }
        if(i<0 || j<0 || i>=n || j>=n)
        {
            return;
        }
        if(m[i][j]==1)
        {
            m[i][j]=0;
            solve(ans,p+'U',n,i-1,j,m);
            solve(ans,p+'D',n,i+1,j,m);
            solve(ans,p+'L',n,i,j-1,m);
            solve(ans,p+'R',n,i,j+1,m);
            m[i][j]=1;
        }
        
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string>ans;
        string p="";
        solve(ans,p,n,0,0,m);
        return ans;
    }
};
