class Solution {
public:
       bool ispal(string& s, int l, int r) {
        while (l < r) {
            if (s[l++] != s[r--]) {
                return false;
            }
        }
        return true;
    }
    void solve(vector<vector<string>>&ans,vector<string>o,string s,int index,int n)
    {
        if(index==n)
        {
            ans.push_back(o);
            return;
        }
        else
        {
            for(int i=index;i<n;i++)
            {
                if(ispal(s,index,i)){
                    o.push_back(s.substr(index,i-index+1));
                    solve(ans,o,s,i+1,s.length());
                    o.pop_back();
                }
            }
            
        }
        
    }
    vector<vector<string>> partition(string s) {
        
        vector<vector<string>>ans;
        vector<string>o;
        solve(ans,o,s,0,s.length());
        return ans;


    }
};
