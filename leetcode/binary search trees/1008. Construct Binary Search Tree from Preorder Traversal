/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   TreeNode* solve(vector<int>& preorder,int n,int min,int max,int &count)
   {
       if(count>=n)
       {
           return NULL;
       }
       if(preorder[count]>max || preorder[count]<min )
       {
           return NULL;
       }
       TreeNode* root=new TreeNode(preorder[count++]);
       root->left=solve(preorder,n,min,root->val,count);
       root->right=solve(preorder,n,root->val,max,count);
       return root;

   }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int count=0;
        int min=INT_MIN,max=INT_MAX;
        int n=preorder.size();
        return solve(preorder,n,min,max,count);
        
    }
};
