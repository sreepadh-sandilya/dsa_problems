class Solution {
public:
    void dfs(int i,int j,vector<vector<char>>& b,vector<vector<bool>>&vis,int m,int n)
    {
        
        if(i==m || j==n || i==-1 || j==-1)
        {
            return;
        }
        if(b[i][j]=='X')
        {
            return;
        }
        else if(b[i][j]=='O' && !vis[i][j])
        {
            vis[i][j]=true;
            dfs(i+1,j,b,vis,m,n);
            dfs(i,j+1,b,vis,m,n);
            dfs(i-1,j,b,vis,m,n);
            dfs(i,j-1,b,vis,m,n);
        }
    }
    void solve(vector<vector<char>>& b) {
        int m=b.size();
        int n=b[0].size();
        vector<vector<bool>>vis(m,vector<bool>(n,false));
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i==m-1 || j==n-1 || i==0 || j==0)
                {
                    if(!vis[i][j] && b[i][j]=='O')
                    {
                        dfs(i,j,b,vis,m,n);
                    }
                }
            }
        }

        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(b[i][j]=='O' && !vis[i][j])
                {
                    b[i][j]='X';
                }
            }
        }
        
    }
};
