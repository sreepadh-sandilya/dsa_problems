class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        // code here
	    vector<int>indegree(V);
	    for(int i=0;i<V;i++)
	    {
	        for(auto j:adj[i])
	        {
	            indegree[j]++;
	        }
	    }
	    queue<int>q;
	    for(int  i=0;i<V;i++)
	    {
	        if(indegree[i]==0)
	        {
	            q.push(i);
	        }
	    }
	   // vector<int>ans;
	   int count=0;;
	    while(!q.empty())
	    {
	        int front=q.front();
	        q.pop();
	       // ans.push_back(front);
	       count++;
	        for(auto i:adj[front])
	        {
	            indegree[i]--;
	            if(indegree[i]==0)
	            {
	                q.push(i);
	            }
	        }
	        
	        
	    }
	    
	   // return ans;
	   if(count==V)
	   {
	       return false;
	   }
	   else
	   {
	       return true;
	   }
	}
    
};
