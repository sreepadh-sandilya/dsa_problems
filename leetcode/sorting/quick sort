
#include <iostream>
#include <vector>
using namespace std;

int partition(vector<int>v,int s,int e)
{
    int pivot=v[s];
    int cnt=0;
    for(int i=s+1;i<e;i++)
    {
        if(v[i]<pivot)
        {
            cnt++;
        }
    }
    
    int pivotindex=s+cnt;
    swap(v[pivotindex],v[s]);
    int i=s,j=e;
    
    while(i<pivotindex && j>pivotindex)
    {
        while(v[i]<=pivot)
        {
            i++;
        }
        while(v[j]>pivot)
        {
            j--;
        }
        if(i<pivotindex && j>pivotindex)
        {
            swap(v[i++],v[j--]);
        }
    }
    
    return pivotindex;
}

void quicksort(vector<int>v,int s,int e)
{
    if(s>=e)
    {
        return;
    }
    int p=partition(v,s,e);
    quicksort(v,s,p-1);
    quicksort(v,p+1,e);
}

int main()
{
    vector<int>v={2,4,1,6,9};
    int n=5;
    quicksort(v,0,n-1);
    for(int i=0;i<n;i++)
    {
        cout<<v[i]<<" ";
    }
    cout<<endl;
 
    return 0;
}
