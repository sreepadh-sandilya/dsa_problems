class Solution {
public:
    long long subArrayRanges(vector<int>& nums) {
        int n=nums.size();
        stack<int>st1,st2,st3,st4;
        vector<int>ls(n),rs(n),lb(n),rb(n);
        for(int i=0;i<n;i++)
        {
            if(i==0)
            {
                st1.push(i);
                ls[i]=-1;

                continue;
            }
            while(!st1.empty() && nums[st1.top()]>=nums[i])
            {
                st1.pop();
            }
            if(!st1.empty())
            {
              ls[i]=st1.top();
            }
            else
            {
                ls[i]=-1;
            }
            st1.push(i);
        }

        for(int i=0;i<n;i++)
        {
            if(i==0)
            {
                st2.push(i);
                lb[i]=-1;

                continue;
            }
            while(!st2.empty() && nums[st2.top()]<=nums[i])
            {
                st2.pop();
            }
            if(!st2.empty())
            {
              lb[i]=st2.top();
            }
            else
            {
                lb[i]=-1;
            }
            st2.push(i);
        }

        for(int i=n-1;i>=0;i--)
        {
            if(i==n-1)
            {
                rs[i]=n;
                st3.push(i);
                continue;
            }
            while(!st3.empty() && nums[st3.top()]>nums[i])
            {
                st3.pop();
            }
            if(!st3.empty())
            {
                rs[i]=st3.top();
            }
            else
            {
                rs[i]=n;
            }
            st3.push(i);
        }

        for(int i=n-1;i>=0;i--)
        {
            if(i==n-1)
            {
                rb[i]=n;
                st4.push(i);
                continue;
            }
            while(!st4.empty() && nums[st4.top()]<nums[i])
            {
                st4.pop();
            }
            if(!st4.empty())
            {
                rb[i]=st4.top();
            }
            else
            {
                rb[i]=n;
            }
            st4.push(i);
       
        }

        for(auto i:ls)
        {
            cout<<i<<" ";
        }
        cout<<endl;
        for(auto i:rs)
        {
            cout<<i<<" ";
        }
        cout<<endl;
        for(auto i:lb)
        {
            cout<<i<<" ";
        }
        cout<<endl;
        for(auto i:rb)
        {
            cout<<i<<" ";
        }
        cout<<endl;

        long long sum1=0,sum2=0;
        for(int i=0;i<n;i++)
        {
            sum1+=(long long)(rs[i]-i)*(long long)(i-ls[i])*(long long)nums[i];
        }
        for(int i=0;i<n;i++)
        {
            sum2+=(long long)(rb[i]-i)*(long long)(i-lb[i])*(long long)nums[i];
        }

        return sum2-sum1;

    }
};
