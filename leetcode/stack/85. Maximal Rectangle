class Solution {
public:
    vector<int> nextsmall(vector<int> arr,int n)
    {
       vector<int>ans(n);
       stack<int>st;
       st.push(-1);
       for(int i=n-1;i>=0;i--){
       while(st.top()!=-1 && arr[st.top()]>=arr[i]){
           st.pop();

       }

       ans[i]=st.top();
       st.push(i);
       }
       return ans;
    }
    vector<int> prevsmall(vector<int> arr,int n)
    {
       vector<int>ans(n);
        stack<int>st;
       st.push(-1);
       for(int i=0;i<n;i++){
       while(st.top()!=-1 && arr[st.top()]>=arr[i]){
           st.pop();

       }
       ans[i]=st.top();
       st.push(i);
       }
       return ans;
    }
    int solve(vector<vector<char>>& matrix,vector<int>&v,int i)
    {
        for(int j=0;j<matrix[0].size();j++)
        {
            if(matrix[i][j]=='1')
            {
                v[j]+=1;
            }
            else
            {
                v[j]=0;
            }
        }
        int n=v.size();
        vector<int>next(n),prev(n);
        next=nextsmall(v,n);
        prev=prevsmall(v,n);
        int area=INT_MIN;
        for(int i=0;i<n;i++)
        {
            if(next[i]==-1)
            {
                next[i]=n;
            }
            int k=v[i]*(next[i]-prev[i]-1);
            area=max(area,k);
        }

        return area;
    }
    int maximalRectangle(vector<vector<char>>& matrix) {
        int n=matrix.size();
        int m=matrix[0].size();
        vector<int>v(m,0);
        int ans=INT_MIN;
        for(int i=0;i<n;i++){
        ans=max(ans,solve(matrix,v,i));
        }
        return ans;
        
    }
};
