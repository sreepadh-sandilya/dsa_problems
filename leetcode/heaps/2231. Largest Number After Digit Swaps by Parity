class Solution {
public:
    int largestInteger(int num) {
        priority_queue<pair<char,int>>pq1;
        priority_queue<pair<char,int>>pq2;
        int count=0;
        string n=to_string(num);
        int l=n.length();
        string p="";
        for(int i=0;i<l;i++)
        {
            if((n[i]-'0')%2==0)
            {
                pq2.push(make_pair(n[i],i+1));
                
            }
            else
            {
                pq1.push(make_pair(n[i],i+1));

            }
        }
        for(int i=0;i<l;i++)
        {
            if((n[i]-'0')%2==0)
            {
                p+=(pq2.top()).first;
                pq2.pop();
            }
            else{
                p+=(pq1.top()).first;
                pq1.pop();
            }
        }
        return stoi(p);

        
    }
};
