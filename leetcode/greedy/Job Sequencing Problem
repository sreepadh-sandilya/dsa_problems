class Solution 
{
    public:
    //Function to find the maximum profit and the number of jobs done.
    static bool comp(Job a,Job b)
    {
        return a.profit>b.profit;
    }
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        sort(arr,arr+n,comp);
        
        int t=0,sum1=0,sum=0;
        
        for(int i=0;i<n;i++)
        {
            t=max(t,arr[i].dead);
        }
        vector<int>v(t+1,-1);
        for(int i=0;i<n;i++)
        {
            int p=arr[i].profit;
            int de=arr[i].dead;
            int r=arr[i].id;
            int d=de;
            if(v[d]==-1)
            {
                v[d]=r;
                    sum+=p;
                    sum1++;
                    // break;
            }
            else
            {
            while(v[d]!=-1 && d>1)
            {
                d--;
                if(v[d]==-1)
                {
                    v[d]=r;
                    sum+=p;
                    sum1++;
                    break;
                }
            }
            }
        }
        vector<int>ans;
        ans.push_back(sum1);
        ans.push_back(sum);
        return ans;
    } 
};
