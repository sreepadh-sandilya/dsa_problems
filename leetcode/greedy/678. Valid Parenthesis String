class Solution {
public:
    void rev(stack<pair<char,int>>&st1)
    {
        vector<pair<char,int>>v;
        while(!st1.empty())
        {
            v.push_back(st1.top());
            st1.pop();
        }
        // reverse(v.begin(),v.end());
        for(auto i:v)
        {
            st1.push(i);
        }
    }
    bool checkValidString(string s) {
        
        stack<pair<char,int>>st1;
        queue<pair<char,int>>st2;
        for(int i=0;i<s.length();i++)
        {
            if(s[i]=='(')
            {
                st1.push({'(',i});
            }
            else if(s[i]==')')
            {
                if(!st1.empty())
                {
                    st1.pop();
                }
                else if(!st2.empty())
                {
                   st2.pop();
                }
                else
                {
                    cout<<i<<endl;
                    return false;
                }
                
            }
            else
            {
                st2.push({'*',i});
            }
        }
        rev(st1);
        while(!st2.empty() && !st1.empty())
        {
            cout<<st1.top().second<<" "<<st2.front().second<<endl;
            if(st1.top().second<st2.front().second)
            {
                st1.pop();
                // st2.pop();
            }
            st2.pop();
        }
        // cout<<"phase2"<<endl;
        

        if(!st1.empty())
        {
            while(!st1.empty())
            {
                // cout<<st1.top().second<<endl;
                st1.pop();
            }
            return false;
        }

        return true;
    }
};
