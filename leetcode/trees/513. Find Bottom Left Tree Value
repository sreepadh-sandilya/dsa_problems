/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        int a=root->val;
        if(root->left==NULL && root->right==NULL)
        {
            return a;
        }
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty())
        {
            int c=0;
            int size=q.size();
            for(int i=0;i<size;i++)
            {
                TreeNode* temp=q.front();
                if(c==0)
                {
                    a=temp->val;
                    c=1;
                }
                q.pop();
                
                if(temp->left)
                {
                    q.push(temp->left);
                    
                }
                if(temp->right)
                {
                    q.push(temp->right);

                }

            }
            
        }

        return a;
    }
};
